input {
     tcp {
     port => "12400"
  }
}


filter {
  mutate {
    add_field => {
      "[event][module]" => "cisco"
      "[event][dataset]" => "cisco.switch"
    }
  }
  mutate {
    strip => ["message"]
  }

  grok {
    tag_on_failure => "_parsefailure_header"
    match => { "message" => "(^(.*?)(<(?<pri>\d+)>)(\s)?(?<actual_msg>.*$))|(^(?<actual_msg>.*)$)" }
    timeout_millis => 500
  }
  syslog_pri {
    syslog_pri_field_name => "pri"
    remove_field => [ "pri" ]
  }

  if [log][source][hostname] {
    mutate {
      copy => { "[log][source][hostname]" => "[tmp][log_source_hostname]"}
    }
    mutate {
      split => { "[tmp][log_source_hostname]" => "." }
      add_field => { "[host][hostname]" => "%{[[tmp][log_source_hostname][0]]}"}
    }
  }

  mutate {
    id => "cisco-mutate-logoriginal1"
    add_field => {"[log][original]" => "%{[message]}"}
  }
  grok {
    id => "cisco.router-mutate-grok-actual_msg"
    match => {
      "actual_msg" => "^(?<[event][id]>.*?): (((?<[host][name]>.*?): )?(?<[tmp][device_timestamp]>.*): %(?<[tmp][facility]>.*?)-(?<[tmp][severity]>.*?)-(?<[tmp][mnemonic]>.*?): )?(?<[tmp][msg]>.*?)$"
    }
  }

  mutate {
    id => "cisco-mutate-gsub-date"
    gsub => [ "[tmp][ingest_timestamp]", "t", "-"]
  }
  date {
    id => "cisco-date-ingest"
    match => [
      "[tmp][ingest_timestamp]", "MMM dd yyyy HH:mm:ss",
      "MMM  d yyyy HH:mm:ss", "ISO8601", "yyyy-MM-dd-HH:mm:ss.SSSZ", "MMM dd HH:mm:ss.SSS", "MMM dd HH:mm:ss.SSS ZZZ", "MMM dd HH:mm:ss ZZZ", "MMM dd HH:mm:ss.SSS", "YYYY MMM dd HH:mm:ss.SSS ZZZ", "YYYY MMM dd HH:mm:ss ZZZ", "YYYY MMM dd HH:mm:ss.SSS"
    ]
    target => "[event][ingested]"
  }

  if [tmp][facility] and [tmp][mnemonic] {
    mutate {
      add_field => { "[event][action]" => "%{[[tmp][facility]]}.%{[[tmp][mnemonic]]}"}
    }
    mutate {
      lowercase => [ "[event][action]", "[tmp][msg]" ]
    }
  }

  translate {
    id => "cisco-translate-mnemonic"
    field => "[tmp][mnemonic]"
    destination => "[tmp][mnemonic_translation]"
    dictionary_path => "${LOGSTASH_HOME}/config/cisco_ios.json"
    refresh_interval => 3000
    fallback => '{"key1":"not_found"}'
  }
}
output {
  stdout { codec => rubydebug }
}
